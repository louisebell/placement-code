function [a,fval]=maxlikhoodrad(r,t,w)

yearmax=max(t);
coordmax=max(r);
f=length(w); %length data set

%set up minimisation
v=[0.3,4,0.02,80]; %Ic's for parameters [s,D,k,M0]
lb = [0,0,0,0]; %all parameters positive
ub = [inf,inf,inf,10000]; %bd initial worm burden M0=e^alpha<100 
A = []; %no linear constraints
b = [];
Aeq = [];
beq = [];
opts=optimset('MaxFunEvals',6000);
[a,fval]=fmincon(@likli,v,A,b,Aeq,beq,lb,ub,[],opts) %max log(p)= minimise -log(p)
neg=nbinfit(w)
spread=2*(a(1)*a(2))^0.5
 n=[0:20]; %r value mesh
 m=[0:40]; %t value mesh
 Ifit=pde3(a,n,m); %find numerical solution to pde at these parameter values
 r=r.^0.5;
 plot3(t,r,w,['*','r']);
 axis([0,40,0,20,0,5000]);
  xlabel('t');
  ylabel('r');
  zlabel('M');
  hold on;
  
 
 surf(m,n,Ifit); 
 rotate3d on;

function b=likli(v) 
%returns log liklihood value at v=[S,D,k,M0]
    S=v(1);
    %S=0;
    D=v(2);
    k=v(3);
    M0=v(4);
    sum=0;

    for i=1:f
        if(D==0) M=M0*exp(S*t(i));
        else
        M=(M0/(4*(pi*D*t(i))))*exp(S*t(i)-(r(i))/(4*D*t(i))); %calculate mean worm burden from solution to 1D Skellam equation
        end
        %M=M0; %s=0,D=0
        P=1-(M/(k+M));
        Y = nbinpdf(w(i),k,P); %prob of attaining ith worm burden value w(i) from NegBin(k,P)
        if(Y==0)l=log(realmin);
       else l=log(Y);  %use logarithms to prevent numerical instability 
       end
           
       sum=l+sum; %keep track of total probability  
      
    end
b=-sum; %return neg function value as max problem
end
end
